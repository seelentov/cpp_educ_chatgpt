#include <iostream>

using namespace std;

int main()
{
   char letter;

   cout << "Введите латинскую букву нижнего регистра: ";
   cin >> letter;

   if (letter >= 'a' && letter <= 'z')
   {
      letter = toupper(letter);
      cout << "Буква в верхнем регистре: " << letter << endl;
   }
   else
   {
      cout << "Некорректный ввод. Введите латинскую букву нижнего регистра." << endl;
   }

   return 0;
}

/*
## Пошаговое объяснение решения

Давайте разберем код, который я написал, по строкам:

1. #include <iostream>

• Эта строка включает в себя заголовочный файл iostream.
• Он содержит определения стандартных потоков ввода/вывода, таких как cin (стандартный ввод, обычно клавиатура) и cout (стандартный вывод, обычно консоль).
•  Благодаря этому мы можем использовать функции cout для вывода текста на экран и cin для получения ввода от пользователя.

2. using namespace std;

• Эта строка позволяет нам использовать элементы из пространства имен std без необходимости постоянно писать std:: перед каждым из них.
• Например, вместо std::cout мы можем просто писать cout.
• Это делает код более кратким и удобным для чтения.

3. int main() {

•  Функция main - это точка входа в любую программу на C++.
•  Любой код, который должен быть выполнен, должен быть размещен внутри этой функции.
•  int в начале объявления функции указывает, что она возвращает целое число. В конце функции return 0;  используется для указания на успешное завершение программы.

4. char letter;

•  Объявляется переменная letter типа char (символьный тип).
•  В этой переменной мы будем хранить введенный пользователем символ.

5. cout << "Введите латинскую букву нижнего регистра: ";

•  cout используется для вывода строки "Введите латинскую букву нижнего регистра: " в консоль.
•  Это запрос пользователю ввести букву.

6. cin >> letter;

•  cin используется для получения ввода от пользователя.
•  Введенный символ будет сохранен в переменной letter.

7. if (letter >= 'a' && letter <= 'z') {

•  Это if-условие проверяет, находится ли введенный символ в диапазоне от 'a' до 'z'.
•  >= и <= - это операторы сравнения, которые проверяют, больше ли или равно letter символу 'a' и меньше ли или равно символу 'z'.
•  && - это логический оператор "и", который проверяет, истинны ли оба условия одновременно.

8. letter = toupper(letter);

•  Если условие в if-условии истинно (введен символ в нижнем регистре), эта строка преобразует букву в верхний регистр.
•  Функция toupper() - это функция стандартной библиотеки C++, которая принимает символ в нижнем регистре и возвращает его вариант в верхнем регистре.

9. cout << "Буква в верхнем регистре: " << letter << endl;

•  Если условие в if-условии истинно, эта строка выводит в консоль сообщение "Буква в верхнем регистре: ", а затем значение переменной letter (т.е. преобразованную в верхний регистр букву).
•  endl - это специальный символ, который добавляет перевод строки в конце вывода, таким образом, следующий вывод будет отображаться на новой строке.

10. } else {

•  Это блок else в if-условии.
•  Он выполняется, если условие в if-условии ложно, т.е. введенный символ не является строчной буквой.

11. cout << "Некорректный ввод. Введите латинскую букву нижнего регистра." << endl;

•  Если введено некорректное значение, выводится сообщение об ошибке, информирующее пользователя, что нужно ввести латинскую букву в нижнем регистре.

12. }

•  Закрывает блок else и if.

13. return 0;

•  Указывает, что программа завершилась успешно.

14. }

•  Закрывает функцию main.

## В итоге:

Данный код позволяет пользователю ввести латинскую букву в нижнем регистре, преобразовать ее в верхний регистр и вывести результат в консоль.
*/