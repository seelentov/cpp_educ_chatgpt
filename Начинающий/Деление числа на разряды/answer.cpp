#include <iostream>
#include <cmath>

using namespace std;

int main()
{
  int number;

  cout << "Введите пятизначное число: ";
  cin >> number;

  // Проверяем, что число действительно пятизначное
  if (number < 10000 || number > 99999)
  {
    cout << "Ошибка: Введено некорректное число." << endl;
    return 1; // Возвращаем код ошибки
  }

  // Извлекаем каждую цифру и выводим ее в отдельной строке
  for (int i = 4; i >= 0; i--)
  {
    int digit = (number / static_cast<int>(pow(10, i))) % 10;
    cout << digit << endl;
  }

  return 0; // Программа завершилась успешно
}

/*
Пошаговое объяснение:

1. Включение заголовочных файлов:
   * #include <iostream>:  Включает стандартный поток ввода-вывода, необходимый для работы с cin и cout.
   * #include <cmath>:  Включает библиотеку математических функций, которая содержит функцию pow().

2. Пространство имен:
   * using namespace std;:  Использует стандартное пространство имен, чтобы не писать std:: перед элементами, такими как cout и cin.

3. Функция main():
   * int main():  Точка входа в программу.

4. Объявление переменной:
   * int number;:  Объявляет целую переменную number для хранения введенного пользователем числа.

5. Ввод данных:
   * cout << "Введите пятизначное число: ";:  Выводит на экран приглашение для ввода числа.
   * cin >> number;:  Считывает число, введенное пользователем, и сохраняет его в переменную number.

6. Проверка корректности ввода:
   * if (number < 10000 || number > 99999):  Проверяет, что введенное число является пятизначным.
   * cout << "Ошибка: Введено некорректное число." << endl;:  Выводит сообщение об ошибке, если введенное число не соответствует условию.
   * return 1;:  Возвращает код ошибки (1), чтобы указать, что программа завершилась с ошибкой.

7. Извлечение цифр:
   * for (int i = 4; i >= 0; i--):  Цикл for для итерации по каждой цифре числа.  Инициализируется переменная i с 4 (последняя цифра) и уменьшается до 0 (первая цифра).
   * int digit = (number / static_cast<int>(pow(10, i))) % 10;:  Эта строка является ключевой.
      *  pow(10, i):  Вычисляет 10 в степени i, чтобы получить соответствующую степень 10 для "сдвига" цифр.
      *  static_cast<int>(...):  Приводит результат pow(10, i) к целому числу для правильного деления.
      *  number / ...:  Делит число number на соответствующую степень 10, сдвигая цифры влево.
      *  ... % 10:  Вычисляет остаток от деления на 10, чтобы извлечь конкретную цифру.
   * cout << digit << endl;:  Выводит извлеченную цифру на отдельной строке.

8. Завершение программы:
   * return 0;:  Возвращает код успеха (0), чтобы указать, что программа завершилась без ошибок.

Пример работы:

Предположим, пользователь вводит число 12345.

1. Цикл начинается с i = 4.
2. pow(10, 4) = 10000.
3. 12345 / 10000 = 1.
4. 1 % 10 = 1. Цифра 1 (последняя) выводится.
5. Цикл продолжается, i уменьшается.
6. Аналогично вычисляются и выводятся остальные цифры (5, 4, 3, 2).

Заключение:

Этот код демонстрирует эффективный способ извлечения цифр из целого числа с помощью арифметических операций и цикла for. Он проверяет корректность введенного числа и предоставляет понятный вывод.
*/